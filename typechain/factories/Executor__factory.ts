/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "INVOICE_CONTRACT",
    outputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum AbstractInvoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct AbstractInvoice.InvoiceData[]",
        name: "invoiceData",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "callExecute",
    outputs: [
      {
        internalType: "bool[]",
        name: "returnData",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "setInvoiceContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611663806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610113578063b4929aaf14610131578063c4d66de81461014f578063f2fde38b1461016b57610088565b806324d7806c1461008d5780634f6686d0146100bd57806361f7c42b146100d9578063715018a614610109575b600080fd5b6100a760048036038101906100a29190610c2a565b610187565b6040516100b49190610fea565b60405180910390f35b6100d760048036038101906100d29190610ccf565b6101dd565b005b6100f360048036038101906100ee9190610c57565b610221565b6040516101009190610fc8565b60405180910390f35b610111610480565b005b61011b610508565b6040516101289190610fad565b60405180910390f35b610139610532565b6040516101469190611005565b60405180910390f35b61016960048036038101906101649190610ccf565b610558565b005b61018560048036038101906101809190610c2a565b610626565b005b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b80609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061023361022e61071e565b610187565b80610277575061024161071e565b73ffffffffffffffffffffffffffffffffffffffff1661025f610508565b73ffffffffffffffffffffffffffffffffffffffff16145b6102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad9061109b565b60405180910390fd5b82518251146102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f1906110bb565b60405180910390fd5b815167ffffffffffffffff81111561031557610314611436565b5b6040519080825280602002602001820160405280156103435781602001602082028036833780820191505090505b50905060005b825181101561047957609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635796c71c8583815181106103a3576103a2611407565b5b60200260200101518584815181106103be576103bd611407565b5b60200260200101516040518363ffffffff1660e01b81526004016103e39291906110db565b600060405180830381600087803b1580156103fd57600080fd5b505af192505050801561040e575060015b61043e57600082828151811061042757610426611407565b5b602002602001019015159081151581525050610466565b600182828151811061045357610452611407565b5b6020026020010190151590811515815250505b808061047190611360565b915050610349565b5092915050565b61048861071e565b73ffffffffffffffffffffffffffffffffffffffff166104a6610508565b73ffffffffffffffffffffffffffffffffffffffff16146104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f39061107b565b60405180910390fd5b6105066000610726565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061056460016107ec565b90508015610588576001600060016101000a81548160ff0219169083151502179055505b81609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106225760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106199190611020565b60405180910390a15b5050565b61062e61071e565b73ffffffffffffffffffffffffffffffffffffffff1661064c610508565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106999061107b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610712576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107099061103b565b60405180910390fd5b61071b81610726565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff16156108635760018260ff1614801561081b5750610819306108dc565b155b61085a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108519061105b565b60405180910390fd5b600090506108d7565b8160ff1660008054906101000a900460ff1660ff16106108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af9061105b565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061091261090d84611132565b61110d565b905080838252602082019050828560208602820111156109355761093461146f565b5b60005b8581101561098357813567ffffffffffffffff81111561095b5761095a611465565b5b8086016109688982610ac7565b85526020850194506020840193505050600181019050610938565b5050509392505050565b60006109a061099b8461115e565b61110d565b90508083825260208201905082856101408602820111156109c4576109c361146f565b5b60005b858110156109f557816109da8882610b1f565b845260208401935061014083019250506001810190506109c7565b5050509392505050565b6000610a12610a0d8461118a565b61110d565b905082815260208101848484011115610a2e57610a2d611474565b5b610a398482856112ed565b509392505050565b600081359050610a50816115c1565b92915050565b600082601f830112610a6b57610a6a611465565b5b8135610a7b8482602086016108ff565b91505092915050565b600082601f830112610a9957610a98611465565b5b8135610aa984826020860161098d565b91505092915050565b600081359050610ac1816115d8565b92915050565b600082601f830112610adc57610adb611465565b5b8135610aec8482602086016109ff565b91505092915050565b600081359050610b04816115ef565b92915050565b600081359050610b1981611606565b92915050565b60006101408284031215610b3657610b3561146a565b5b610b4161014061110d565b90506000610b5184828501610a41565b6000830152506020610b6584828501610a41565b6020830152506040610b7984828501610c15565b6040830152506060610b8d84828501610a41565b6060830152506080610ba184828501610b0a565b60808301525060a0610bb584828501610c15565b60a08301525060c0610bc984828501610c15565b60c08301525060e0610bdd84828501610c15565b60e083015250610100610bf284828501610c15565b61010083015250610120610c0884828501610ab2565b6101208301525092915050565b600081359050610c2481611616565b92915050565b600060208284031215610c4057610c3f61147e565b5b6000610c4e84828501610a41565b91505092915050565b60008060408385031215610c6e57610c6d61147e565b5b600083013567ffffffffffffffff811115610c8c57610c8b611479565b5b610c9885828601610a84565b925050602083013567ffffffffffffffff811115610cb957610cb8611479565b5b610cc585828601610a56565b9150509250929050565b600060208284031215610ce557610ce461147e565b5b6000610cf384828501610af5565b91505092915050565b6000610d088383610d90565b60208301905092915050565b610d1d81611221565b82525050565b610d2c81611221565b82525050565b6000610d3d826111cb565b610d4781856111ee565b9350610d52836111bb565b8060005b83811015610d83578151610d6a8882610cfc565b9750610d75836111e1565b925050600181019050610d56565b5085935050505092915050565b610d9981611233565b82525050565b610da881611233565b82525050565b610db78161123f565b82525050565b6000610dc8826111d6565b610dd281856111ff565b9350610de28185602086016112fc565b610deb81611483565b840191505092915050565b610dff816112a5565b82525050565b610e0e816112c9565b82525050565b610e1d816112db565b82525050565b6000610e30602683611210565b9150610e3b82611494565b604082019050919050565b6000610e53602e83611210565b9150610e5e826114e3565b604082019050919050565b6000610e76602083611210565b9150610e8182611532565b602082019050919050565b6000610e99601383611210565b9150610ea48261155b565b602082019050919050565b6000610ebc600e83611210565b9150610ec782611584565b602082019050919050565b61014082016000820151610ee96000850182610d14565b506020820151610efc6020850182610d14565b506040820151610f0f6040850182610f9e565b506060820151610f226060850182610d14565b506080820151610f356080850182610e05565b5060a0820151610f4860a0850182610f9e565b5060c0820151610f5b60c0850182610f9e565b5060e0820151610f6e60e0850182610f9e565b50610100820151610f83610100850182610f9e565b50610120820151610f98610120850182610dae565b50505050565b610fa78161128e565b82525050565b6000602082019050610fc26000830184610d23565b92915050565b60006020820190508181036000830152610fe28184610d32565b905092915050565b6000602082019050610fff6000830184610d9f565b92915050565b600060208201905061101a6000830184610df6565b92915050565b60006020820190506110356000830184610e14565b92915050565b6000602082019050818103600083015261105481610e23565b9050919050565b6000602082019050818103600083015261107481610e46565b9050919050565b6000602082019050818103600083015261109481610e69565b9050919050565b600060208201905081810360008301526110b481610e8c565b9050919050565b600060208201905081810360008301526110d481610eaf565b9050919050565b6000610160820190506110f16000830185610ed2565b8181036101408301526111048184610dbd565b90509392505050565b6000611117611128565b9050611123828261132f565b919050565b6000604051905090565b600067ffffffffffffffff82111561114d5761114c611436565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561117957611178611436565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156111a5576111a4611436565b5b6111ae82611483565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061122c8261126e565b9050919050565b60008115159050919050565b6000819050919050565b600061125482611221565b9050919050565b6000819050611269826115ad565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006112b0826112b7565b9050919050565b60006112c28261126e565b9050919050565b60006112d48261125b565b9050919050565b60006112e682611298565b9050919050565b82818337600083830152505050565b60005b8381101561131a5780820151818401526020810190506112ff565b83811115611329576000848401525b50505050565b61133882611483565b810181811067ffffffffffffffff8211171561135757611356611436565b5b80604052505050565b600061136b8261128e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561139e5761139d6113a9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f4c65677468206d69736d61746368000000000000000000000000000000000000600082015250565b600681106115be576115bd6113d8565b5b50565b6115ca81611221565b81146115d557600080fd5b50565b6115e18161123f565b81146115ec57600080fd5b50565b6115f881611249565b811461160357600080fd5b50565b6006811061161357600080fd5b50565b61161f8161128e565b811461162a57600080fd5b5056fea2646970667358221220739e38c4375a757bf9b62ce97d16282e5845588ea3b9d94f3131fec7d7cd018464736f6c63430008060033";

export class Executor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Executor> {
    return super.deploy(overrides || {}) as Promise<Executor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Executor {
    return super.attach(address) as Executor;
  }
  connect(signer: Signer): Executor__factory {
    return super.connect(signer) as Executor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new utils.Interface(_abi) as ExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Executor {
    return new Contract(address, _abi, signerOrProvider) as Executor;
  }
}
