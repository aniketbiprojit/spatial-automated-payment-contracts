/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "INVOICE_CONTRACT",
    outputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum AbstractInvoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct AbstractInvoice.InvoiceData[]",
        name: "invoiceData",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "callExecute",
    outputs: [
      {
        internalType: "bool[]",
        name: "returnData",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "setInvoiceContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610113578063b4929aaf14610131578063c4d66de81461014f578063f2fde38b1461016b57610088565b806324d7806c1461008d5780634f6686d0146100bd57806361f7c42b146100d9578063715018a614610109575b600080fd5b6100a760048036038101906100a29190610b7a565b610187565b6040516100b49190610f3a565b60405180910390f35b6100d760048036038101906100d29190610c1f565b6101dd565b005b6100f360048036038101906100ee9190610ba7565b610221565b6040516101009190610f18565b60405180910390f35b610111610480565b005b61011b610494565b6040516101289190610efd565b60405180910390f35b6101396104be565b6040516101469190610f55565b60405180910390f35b61016960048036038101906101649190610c1f565b6104e4565b005b61018560048036038101906101809190610b7a565b61065c565b005b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b80609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061023361022e6106e0565b610187565b8061027757506102416106e0565b73ffffffffffffffffffffffffffffffffffffffff1661025f610494565b73ffffffffffffffffffffffffffffffffffffffff16145b6102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610feb565b60405180910390fd5b82518251146102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f19061100b565b60405180910390fd5b815167ffffffffffffffff81111561031557610314611386565b5b6040519080825280602002602001820160405280156103435781602001602082028036833780820191505090505b50905060005b825181101561047957609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635796c71c8583815181106103a3576103a2611357565b5b60200260200101518584815181106103be576103bd611357565b5b60200260200101516040518363ffffffff1660e01b81526004016103e392919061102b565b600060405180830381600087803b1580156103fd57600080fd5b505af192505050801561040e575060015b61043e57600082828151811061042757610426611357565b5b602002602001019015159081151581525050610466565b600182828151811061045357610452611357565b5b6020026020010190151590811515815250505b8080610471906112b0565b915050610349565b5092915050565b6104886106e8565b6104926000610766565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff161590508080156105155750600160008054906101000a900460ff1660ff16105b8061054257506105243061082c565b1580156105415750600160008054906101000a900460ff1660ff16145b5b610581576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057890610fab565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156105be576001600060016101000a81548160ff0219169083151502179055505b81609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106585760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161064f9190610f70565b60405180910390a15b5050565b6106646106e8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90610f8b565b60405180910390fd5b6106dd81610766565b50565b600033905090565b6106f06106e0565b73ffffffffffffffffffffffffffffffffffffffff1661070e610494565b73ffffffffffffffffffffffffffffffffffffffff1614610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610fcb565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061086261085d84611082565b61105d565b90508083825260208201905082856020860282011115610885576108846113bf565b5b60005b858110156108d357813567ffffffffffffffff8111156108ab576108aa6113b5565b5b8086016108b88982610a17565b85526020850194506020840193505050600181019050610888565b5050509392505050565b60006108f06108eb846110ae565b61105d565b9050808382526020820190508285610140860282011115610914576109136113bf565b5b60005b85811015610945578161092a8882610a6f565b84526020840193506101408301925050600181019050610917565b5050509392505050565b600061096261095d846110da565b61105d565b90508281526020810184848401111561097e5761097d6113c4565b5b61098984828561123d565b509392505050565b6000813590506109a081611511565b92915050565b600082601f8301126109bb576109ba6113b5565b5b81356109cb84826020860161084f565b91505092915050565b600082601f8301126109e9576109e86113b5565b5b81356109f98482602086016108dd565b91505092915050565b600081359050610a1181611528565b92915050565b600082601f830112610a2c57610a2b6113b5565b5b8135610a3c84826020860161094f565b91505092915050565b600081359050610a548161153f565b92915050565b600081359050610a6981611556565b92915050565b60006101408284031215610a8657610a856113ba565b5b610a9161014061105d565b90506000610aa184828501610991565b6000830152506020610ab584828501610991565b6020830152506040610ac984828501610b65565b6040830152506060610add84828501610991565b6060830152506080610af184828501610a5a565b60808301525060a0610b0584828501610b65565b60a08301525060c0610b1984828501610b65565b60c08301525060e0610b2d84828501610b65565b60e083015250610100610b4284828501610b65565b61010083015250610120610b5884828501610a02565b6101208301525092915050565b600081359050610b7481611566565b92915050565b600060208284031215610b9057610b8f6113ce565b5b6000610b9e84828501610991565b91505092915050565b60008060408385031215610bbe57610bbd6113ce565b5b600083013567ffffffffffffffff811115610bdc57610bdb6113c9565b5b610be8858286016109d4565b925050602083013567ffffffffffffffff811115610c0957610c086113c9565b5b610c15858286016109a6565b9150509250929050565b600060208284031215610c3557610c346113ce565b5b6000610c4384828501610a45565b91505092915050565b6000610c588383610ce0565b60208301905092915050565b610c6d81611171565b82525050565b610c7c81611171565b82525050565b6000610c8d8261111b565b610c97818561113e565b9350610ca28361110b565b8060005b83811015610cd3578151610cba8882610c4c565b9750610cc583611131565b925050600181019050610ca6565b5085935050505092915050565b610ce981611183565b82525050565b610cf881611183565b82525050565b610d078161118f565b82525050565b6000610d1882611126565b610d22818561114f565b9350610d3281856020860161124c565b610d3b816113d3565b840191505092915050565b610d4f816111f5565b82525050565b610d5e81611219565b82525050565b610d6d8161122b565b82525050565b6000610d80602683611160565b9150610d8b826113e4565b604082019050919050565b6000610da3602e83611160565b9150610dae82611433565b604082019050919050565b6000610dc6602083611160565b9150610dd182611482565b602082019050919050565b6000610de9601383611160565b9150610df4826114ab565b602082019050919050565b6000610e0c600e83611160565b9150610e17826114d4565b602082019050919050565b61014082016000820151610e396000850182610c64565b506020820151610e4c6020850182610c64565b506040820151610e5f6040850182610eee565b506060820151610e726060850182610c64565b506080820151610e856080850182610d55565b5060a0820151610e9860a0850182610eee565b5060c0820151610eab60c0850182610eee565b5060e0820151610ebe60e0850182610eee565b50610100820151610ed3610100850182610eee565b50610120820151610ee8610120850182610cfe565b50505050565b610ef7816111de565b82525050565b6000602082019050610f126000830184610c73565b92915050565b60006020820190508181036000830152610f328184610c82565b905092915050565b6000602082019050610f4f6000830184610cef565b92915050565b6000602082019050610f6a6000830184610d46565b92915050565b6000602082019050610f856000830184610d64565b92915050565b60006020820190508181036000830152610fa481610d73565b9050919050565b60006020820190508181036000830152610fc481610d96565b9050919050565b60006020820190508181036000830152610fe481610db9565b9050919050565b6000602082019050818103600083015261100481610ddc565b9050919050565b6000602082019050818103600083015261102481610dff565b9050919050565b6000610160820190506110416000830185610e22565b8181036101408301526110548184610d0d565b90509392505050565b6000611067611078565b9050611073828261127f565b919050565b6000604051905090565b600067ffffffffffffffff82111561109d5761109c611386565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156110c9576110c8611386565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156110f5576110f4611386565b5b6110fe826113d3565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061117c826111be565b9050919050565b60008115159050919050565b6000819050919050565b60006111a482611171565b9050919050565b60008190506111b9826114fd565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061120082611207565b9050919050565b6000611212826111be565b9050919050565b6000611224826111ab565b9050919050565b6000611236826111e8565b9050919050565b82818337600083830152505050565b60005b8381101561126a57808201518184015260208101905061124f565b83811115611279576000848401525b50505050565b611288826113d3565b810181811067ffffffffffffffff821117156112a7576112a6611386565b5b80604052505050565b60006112bb826111de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112ee576112ed6112f9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f4c65677468206d69736d61746368000000000000000000000000000000000000600082015250565b6006811061150e5761150d611328565b5b50565b61151a81611171565b811461152557600080fd5b50565b6115318161118f565b811461153c57600080fd5b50565b61154881611199565b811461155357600080fd5b50565b6006811061156357600080fd5b50565b61156f816111de565b811461157a57600080fd5b5056fea2646970667358221220fe896d03b9c1cf7038728917cf292bdf6065a25b8d29c7e9273220d25766949164736f6c63430008060033";

export class Executor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Executor> {
    return super.deploy(overrides || {}) as Promise<Executor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Executor {
    return super.attach(address) as Executor;
  }
  connect(signer: Signer): Executor__factory {
    return super.connect(signer) as Executor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new utils.Interface(_abi) as ExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Executor {
    return new Contract(address, _abi, signerOrProvider) as Executor;
  }
}
