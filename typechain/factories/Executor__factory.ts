/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "INVOICE_CONTRACT",
    outputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum AbstractInvoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct AbstractInvoice.InvoiceData[]",
        name: "invoiceData",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "callExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AbstractInvoice",
        name: "_INVOICE_CONTRACT",
        type: "address",
      },
    ],
    name: "setInvoiceContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ff578063b4929aaf1461011d578063c4d66de81461013b578063f2fde38b1461015757610088565b806324d7806c1461008d5780634f6686d0146100bd57806361f7c42b146100d9578063715018a6146100f5575b600080fd5b6100a760048036038101906100a29190610b78565b610173565b6040516100b49190610e91565b60405180910390f35b6100d760048036038101906100d29190610c1d565b6101c9565b005b6100f360048036038101906100ee9190610ba5565b61020d565b005b6100fd6103ce565b005b610107610456565b6040516101149190610e76565b60405180910390f35b610125610480565b6040516101329190610eac565b60405180910390f35b61015560048036038101906101509190610c1d565b6104a6565b005b610171600480360381019061016c9190610b78565b610574565b005b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b80609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61021d61021861066c565b610173565b80610261575061022b61066c565b73ffffffffffffffffffffffffffffffffffffffff16610249610456565b73ffffffffffffffffffffffffffffffffffffffff16145b6102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610f42565b60405180910390fd5b81518151146102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db90610f62565b60405180910390fd5b60005b81518110156103c957609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635796c71c84838151811061034157610340611275565b5b602002602001015184848151811061035c5761035b611275565b5b60200260200101516040518363ffffffff1660e01b8152600401610381929190610f82565b600060405180830381600087803b15801561039b57600080fd5b505af19250505080156103ac575060015b6103b5576103b6565b5b80806103c1906111ce565b9150506102e7565b505050565b6103d661066c565b73ffffffffffffffffffffffffffffffffffffffff166103f4610456565b73ffffffffffffffffffffffffffffffffffffffff161461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610f22565b60405180910390fd5b6104546000610674565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104b2600161073a565b905080156104d6576001600060016101000a81548160ff0219169083151502179055505b81609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156105705760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516105679190610ec7565b60405180910390a15b5050565b61057c61066c565b73ffffffffffffffffffffffffffffffffffffffff1661059a610456565b73ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790610f22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790610ee2565b60405180910390fd5b61066981610674565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff16156107b15760018260ff1614801561076957506107673061082a565b155b6107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f90610f02565b60405180910390fd5b60009050610825565b8160ff1660008054906101000a900460ff1660ff1610610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fd90610f02565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061086061085b84610fd9565b610fb4565b90508083825260208201905082856020860282011115610883576108826112dd565b5b60005b858110156108d157813567ffffffffffffffff8111156108a9576108a86112d3565b5b8086016108b68982610a15565b85526020850194506020840193505050600181019050610886565b5050509392505050565b60006108ee6108e984611005565b610fb4565b9050808382526020820190508285610140860282011115610912576109116112dd565b5b60005b8581101561094357816109288882610a6d565b84526020840193506101408301925050600181019050610915565b5050509392505050565b600061096061095b84611031565b610fb4565b90508281526020810184848401111561097c5761097b6112e2565b5b61098784828561115b565b509392505050565b60008135905061099e8161142f565b92915050565b600082601f8301126109b9576109b86112d3565b5b81356109c984826020860161084d565b91505092915050565b600082601f8301126109e7576109e66112d3565b5b81356109f78482602086016108db565b91505092915050565b600081359050610a0f81611446565b92915050565b600082601f830112610a2a57610a296112d3565b5b8135610a3a84826020860161094d565b91505092915050565b600081359050610a528161145d565b92915050565b600081359050610a6781611474565b92915050565b60006101408284031215610a8457610a836112d8565b5b610a8f610140610fb4565b90506000610a9f8482850161098f565b6000830152506020610ab38482850161098f565b6020830152506040610ac784828501610b63565b6040830152506060610adb8482850161098f565b6060830152506080610aef84828501610a58565b60808301525060a0610b0384828501610b63565b60a08301525060c0610b1784828501610b63565b60c08301525060e0610b2b84828501610b63565b60e083015250610100610b4084828501610b63565b61010083015250610120610b5684828501610a00565b6101208301525092915050565b600081359050610b7281611484565b92915050565b600060208284031215610b8e57610b8d6112ec565b5b6000610b9c8482850161098f565b91505092915050565b60008060408385031215610bbc57610bbb6112ec565b5b600083013567ffffffffffffffff811115610bda57610bd96112e7565b5b610be6858286016109d2565b925050602083013567ffffffffffffffff811115610c0757610c066112e7565b5b610c13858286016109a4565b9150509250929050565b600060208284031215610c3357610c326112ec565b5b6000610c4184828501610a43565b91505092915050565b610c538161108f565b82525050565b610c628161108f565b82525050565b610c71816110a1565b82525050565b610c80816110ad565b82525050565b6000610c9182611062565b610c9b818561106d565b9350610cab81856020860161116a565b610cb4816112f1565b840191505092915050565b610cc881611113565b82525050565b610cd781611137565b82525050565b610ce681611149565b82525050565b6000610cf960268361107e565b9150610d0482611302565b604082019050919050565b6000610d1c602e8361107e565b9150610d2782611351565b604082019050919050565b6000610d3f60208361107e565b9150610d4a826113a0565b602082019050919050565b6000610d6260138361107e565b9150610d6d826113c9565b602082019050919050565b6000610d85600e8361107e565b9150610d90826113f2565b602082019050919050565b61014082016000820151610db26000850182610c4a565b506020820151610dc56020850182610c4a565b506040820151610dd86040850182610e67565b506060820151610deb6060850182610c4a565b506080820151610dfe6080850182610cce565b5060a0820151610e1160a0850182610e67565b5060c0820151610e2460c0850182610e67565b5060e0820151610e3760e0850182610e67565b50610100820151610e4c610100850182610e67565b50610120820151610e61610120850182610c77565b50505050565b610e70816110fc565b82525050565b6000602082019050610e8b6000830184610c59565b92915050565b6000602082019050610ea66000830184610c68565b92915050565b6000602082019050610ec16000830184610cbf565b92915050565b6000602082019050610edc6000830184610cdd565b92915050565b60006020820190508181036000830152610efb81610cec565b9050919050565b60006020820190508181036000830152610f1b81610d0f565b9050919050565b60006020820190508181036000830152610f3b81610d32565b9050919050565b60006020820190508181036000830152610f5b81610d55565b9050919050565b60006020820190508181036000830152610f7b81610d78565b9050919050565b600061016082019050610f986000830185610d9b565b818103610140830152610fab8184610c86565b90509392505050565b6000610fbe610fcf565b9050610fca828261119d565b919050565b6000604051905090565b600067ffffffffffffffff821115610ff457610ff36112a4565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156110205761101f6112a4565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561104c5761104b6112a4565b5b611055826112f1565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061109a826110dc565b9050919050565b60008115159050919050565b6000819050919050565b60006110c28261108f565b9050919050565b60008190506110d78261141b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061111e82611125565b9050919050565b6000611130826110dc565b9050919050565b6000611142826110c9565b9050919050565b600061115482611106565b9050919050565b82818337600083830152505050565b60005b8381101561118857808201518184015260208101905061116d565b83811115611197576000848401525b50505050565b6111a6826112f1565b810181811067ffffffffffffffff821117156111c5576111c46112a4565b5b80604052505050565b60006111d9826110fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561120c5761120b611217565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f4c65677468206d69736d61746368000000000000000000000000000000000000600082015250565b6006811061142c5761142b611246565b5b50565b6114388161108f565b811461144357600080fd5b50565b61144f816110ad565b811461145a57600080fd5b50565b611466816110b7565b811461147157600080fd5b50565b6006811061148157600080fd5b50565b61148d816110fc565b811461149857600080fd5b5056fea2646970667358221220d4a2ebf68929be2b238a94aedb95f962164b5760fa835d3e86ba4d4c5c960b0f64736f6c63430008060033";

export class Executor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Executor> {
    return super.deploy(overrides || {}) as Promise<Executor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Executor {
    return super.attach(address) as Executor;
  }
  connect(signer: Signer): Executor__factory {
    return super.connect(signer) as Executor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new utils.Interface(_abi) as ExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Executor {
    return new Contract(address, _abi, signerOrProvider) as Executor;
  }
}
