/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Invoice, InvoiceInterface } from "../Invoice";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Invoice.InvoiceData",
        name: "invoiceData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "InvoiceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetCurrency",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "SetFeePercent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetPayee",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIQUE_INDENTIFIER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct Invoice.InvoiceData",
        name: "invoiceData",
        type: "tuple",
      },
    ],
    name: "createInvoice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct Invoice.InvoiceData",
        name: "returnedInvoice",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "currencies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "onlyWithSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "_currencies",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistPayee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506131bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637ce3489b1161009757806397dc75561161006657806397dc755614610274578063affed0e014610290578063c623cabe146102ae578063f2fde38b146102cc576100f5565b80637ce3489b146102125780637fd6f15c1461022e5780638129fc1c1461024c5780638da5cb5b14610256576100f5565b80636036cba3116100d35780636036cba314610176578063715018a6146101a657806371c3a60b146101b05780637418c05e146101e2576100f5565b8063247db663146100fa57806324d7806c14610116578063310441fa14610146575b600080fd5b610114600480360381019061010f9190611eb4565b6102e8565b005b610130600480360381019061012b9190611dbc565b610463565b60405161013d9190612530565b60405180910390f35b610160600480360381019061015b9190611dbc565b6104b9565b60405161016d9190612530565b60405180910390f35b610190600480360381019061018b9190611f3d565b6104d9565b60405161019d9190612530565b60405180910390f35b6101ae6104f9565b005b6101ca60048036038101906101c59190611f6a565b610581565b6040516101d993929190612847565b60405180910390f35b6101fc60048036038101906101f79190611de9565b610677565b6040516102099190612530565b60405180910390f35b61022c60048036038101906102279190611f98565b6106c9565b005b6102366107ee565b6040516102439190612881565b60405180910390f35b6102546107f4565b005b61025e6108dc565b60405161026b91906124ec565b60405180910390f35b61028e60048036038101906102899190611e58565b610906565b005b610298610a81565b6040516102a59190612881565b60405180910390f35b6102b6610a87565b6040516102c3919061261f565b60405180910390f35b6102e660048036038101906102e19190611dbc565b610b15565b005b6102f86102f3610c0d565b610463565b8061033c5750610306610c0d565b73ffffffffffffffffffffffffffffffffffffffff166103246108dc565b73ffffffffffffffffffffffffffffffffffffffff16145b61037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061274b565b60405180910390fd5b60005b825181101561045e5781609c600085848151811061039f5761039e612d4f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f98c0c4bde5f642566cdaebfb7cd2cdc72a98bc7f3440e38c19e1d58d92388d3483828151811061042c5761042b612d4f565b5b6020026020010151836040516104439291906125db565b60405180910390a1808061045690612c05565b91505061037e565b505050565b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b609b6020528060005260406000206000915054906101000a900460ff1681565b609c6020528060005260406000206000915054906101000a900460ff1681565b610501610c0d565b73ffffffffffffffffffffffffffffffffffffffff1661051f6108dc565b73ffffffffffffffffffffffffffffffffffffffff1614610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c9061270b565b60405180910390fd5b61057f6000610c15565b565b61058961193a565b600080609b6000610598610c0d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661061f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610616906126ab565b60405180910390fd5b61062884610cdb565b8093508194505050609d5490507ffd530febd28afa22a61e317d9ac622adc9a1d16eecb7b8df77d00f19cc4dc70683838360405161066893929190612847565b60405180910390a19193909250565b6000808360405160200161068b91906124d1565b6040516020818303038152906040528051906020012090506106ac81611033565b6106bf856106b9836110cc565b856110fc565b9150509392505050565b6106d96106d4610c0d565b610463565b8061071d57506106e7610c0d565b73ffffffffffffffffffffffffffffffffffffffff166107056108dc565b73ffffffffffffffffffffffffffffffffffffffff16145b61075c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107539061274b565b60405180910390fd5b60648110801561076c5750606481115b6107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a29061276b565b60405180910390fd5b806099819055507f54b9dbb1167ce9a1e141b9c71f73394e64bf53da85077b4bcdcff626ba943f586099546040516107e39190612881565b60405180910390a150565b60995481565b600061080060016112e1565b90508015610824576001600060016101000a81548160ff0219169083151502179055505b61082c6113d1565b6040518060400160405280600881526020017f504249542d415050000000000000000000000000000000000000000000000000815250609890805190602001906108779291906119e4565b50600a60998190555080156108d95760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516108d09190612604565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610916610911610c0d565b610463565b8061095a5750610924610c0d565b73ffffffffffffffffffffffffffffffffffffffff166109426108dc565b73ffffffffffffffffffffffffffffffffffffffff16145b610999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109909061274b565b60405180910390fd5b60005b8251811015610a7c5781609b60008584815181106109bd576109bc612d4f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd23249e66bcd36732dfc58e0713ce7e15bd57a8fe27ce72dffa3035ccfa7ce5d838281518110610a4a57610a49612d4f565b5b602002602001015183604051610a61929190612507565b60405180910390a18080610a7490612c05565b91505061099c565b505050565b609d5481565b60988054610a9490612ba2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac090612ba2565b8015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b505050505081565b610b1d610c0d565b73ffffffffffffffffffffffffffffffffffffffff16610b3b6108dc565b73ffffffffffffffffffffffffffffffffffffffff1614610b91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b889061270b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf89061268b565b60405180910390fd5b610c0a81610c15565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ce361193a565b600080836040015111610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d229061272b565b60405180910390fd5b609b6000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db2906127cb565b60405180910390fd5b609c6000846060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e42906126cb565b60405180910390fd5b610e1042610e5991906129ad565b8360a0015111610e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e959061280b565b60405180910390fd5b8260a001518360e00151118015610eca5750620151808360a001518460e00151610ec89190612a34565b115b610f09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f009061278b565b60405180910390fd5b6001609d6000828254610f1c91906129ad565b925050819055506098610f30609d54611432565b604051602001610f41929190612641565b6040516020818303038152906040528051906020012083610120018181525050609d548361010001818152505082604051602001610f7f919061282b565b60405160208183030381529060405280519060200120905060011515609a600083815260200190815260200160002060009054906101000a900460ff1615151415610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff6906127eb565b60405180910390fd5b6001609a600083815260200190815260200160002060006101000a81548160ff021916908315150217905550829150915091565b6110c981604051602401611047919061254b565b6040516020818303038152906040527f27b7cf85000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611593565b50565b6000816040516020016110df91906124ab565b604051602081830303815290604052805190602001209050919050565b600080600061110b85856115bc565b915091506000600481111561112357611122612cf1565b5b81600481111561113657611135612cf1565b5b14801561116e57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561117e576001925050506112da565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016111b3929190612566565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161121d9190612494565b600060405180830381855afa9150503d8060008114611258576040519150601f19603f3d011682016040523d82523d6000602084013e61125d565b606091505b5091509150818015611270575060208151145b80156112d35750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906112b29190611f10565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9450505050505b9392505050565b60008060019054906101000a900460ff16156113585760018260ff16148015611310575061130e3061163f565b155b61134f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611346906126eb565b60405180910390fd5b600090506113cc565b8160ff1660008054906101000a900460ff1660ff16106113ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a4906126eb565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16611420576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611417906127ab565b60405180910390fd5b611428611662565b6114306116bb565b565b6060600082141561147a576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061158e565b600082905060005b600082146114ac57808061149590612c05565b915050600a826114a59190612a03565b9150611482565b60008167ffffffffffffffff8111156114c8576114c7612d7e565b5b6040519080825280601f01601f1916602001820160405280156114fa5781602001600182028036833780820191505090505b5090505b60008514611587576001826115139190612a34565b9150600a856115229190612c62565b603061152e91906129ad565b60f81b81838151811061154457611543612d4f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856115809190612a03565b94506114fe565b8093505050505b919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000806041835114156115fe5760008060006020860151925060408601519150606086015160001a90506115f287828585611714565b94509450505050611638565b60408351141561162f576000806020850151915060408501519050611624868383611821565b935093505050611638565b60006002915091505b9250929050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166116b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a8906127ab565b60405180910390fd5b6116b9611880565b565b600060019054906101000a900460ff1661170a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611701906127ab565b60405180910390fd5b6117126118e1565b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561174f576000600391509150611818565b601b8560ff16141580156117675750601c8560ff1614155b15611779576000600491509150611818565b60006001878787876040516000815260200160405260405161179e9493929190612596565b6020604051602081039080840390855afa1580156117c0573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561180f57600060019250925050611818565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c61186491906129ad565b905061187287828885611714565b935093505050935093915050565b600060019054906101000a900460ff166118cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c6906127ab565b60405180910390fd5b6118df6118da610c0d565b610c15565b565b600060019054906101000a900460ff16611930576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611927906127ab565b60405180910390fd5b6001606581905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060058111156119b8576119b7612cf1565b5b815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b8280546119f090612ba2565b90600052602060002090601f016020900481019282611a125760008555611a59565b82601f10611a2b57805160ff1916838001178555611a59565b82800160010185558215611a59579182015b82811115611a58578251825591602001919060010190611a3d565b5b509050611a669190611a6a565b5090565b5b80821115611a83576000816000905550600101611a6b565b5090565b6000611a9a611a95846128c1565b61289c565b90508083825260208201905082856020860282011115611abd57611abc612db7565b5b60005b85811015611aed5781611ad38882611ba9565b845260208401935060208301925050600181019050611ac0565b5050509392505050565b6000611b0a611b05846128ed565b61289c565b90508083825260208201905082856020860282011115611b2d57611b2c612db7565b5b60005b85811015611b5d5781611b438882611c87565b845260208401935060208301925050600181019050611b30565b5050509392505050565b6000611b7a611b7584612919565b61289c565b905082815260208101848484011115611b9657611b95612dbc565b5b611ba1848285612b60565b509392505050565b600081359050611bb8816130ef565b92915050565b600082601f830112611bd357611bd2612dad565b5b8135611be3848260208601611a87565b91505092915050565b600082601f830112611c0157611c00612dad565b5b8135611c11848260208601611af7565b91505092915050565b600081359050611c2981613106565b92915050565b600081359050611c3e8161311d565b92915050565b600081519050611c5381613134565b92915050565b600082601f830112611c6e57611c6d612dad565b5b8135611c7e848260208601611b67565b91505092915050565b600081359050611c968161314b565b92915050565b600081359050611cab81613162565b92915050565b60006101408284031215611cc857611cc7612db2565b5b611cd361014061289c565b90506000611ce384828501611ba9565b6000830152506020611cf784828501611ba9565b6020830152506040611d0b84828501611da7565b6040830152506060611d1f84828501611ba9565b6060830152506080611d3384828501611c9c565b60808301525060a0611d4784828501611da7565b60a08301525060c0611d5b84828501611da7565b60c08301525060e0611d6f84828501611da7565b60e083015250610100611d8484828501611da7565b61010083015250610120611d9a84828501611c2f565b6101208301525092915050565b600081359050611db681613172565b92915050565b600060208284031215611dd257611dd1612dc6565b5b6000611de084828501611ba9565b91505092915050565b600080600060608486031215611e0257611e01612dc6565b5b6000611e1086828701611ba9565b9350506020611e2186828701611da7565b925050604084013567ffffffffffffffff811115611e4257611e41612dc1565b5b611e4e86828701611c59565b9150509250925092565b60008060408385031215611e6f57611e6e612dc6565b5b600083013567ffffffffffffffff811115611e8d57611e8c612dc1565b5b611e9985828601611bbe565b9250506020611eaa85828601611c1a565b9150509250929050565b60008060408385031215611ecb57611eca612dc6565b5b600083013567ffffffffffffffff811115611ee957611ee8612dc1565b5b611ef585828601611bec565b9250506020611f0685828601611c1a565b9150509250929050565b600060208284031215611f2657611f25612dc6565b5b6000611f3484828501611c44565b91505092915050565b600060208284031215611f5357611f52612dc6565b5b6000611f6184828501611c87565b91505092915050565b60006101408284031215611f8157611f80612dc6565b5b6000611f8f84828501611cb1565b91505092915050565b600060208284031215611fae57611fad612dc6565b5b6000611fbc84828501611da7565b91505092915050565b611fce81612a68565b82525050565b611fdd81612a68565b82525050565b611fec81612a7a565b82525050565b611ffb81612a86565b82525050565b61200a81612a86565b82525050565b61202161201c82612a86565b612c4e565b82525050565b60006120328261295f565b61203c8185612975565b935061204c818560208601612b6f565b61205581612dcb565b840191505092915050565b600061206b8261295f565b6120758185612986565b9350612085818560208601612b6f565b80840191505092915050565b61209a81612b18565b82525050565b6120a981612b3c565b82525050565b6120b881612b4e565b82525050565b60006120c98261296a565b6120d38185612991565b93506120e3818560208601612b6f565b6120ec81612dcb565b840191505092915050565b6000815461210481612ba2565b61210e8186612991565b94506001821660008114612129576001811461213b5761216e565b60ff198316865260208601935061216e565b6121448561294a565b60005b8381101561216657815481890152600182019150602081019050612147565b808801955050505b50505092915050565b6000612184601c836129a2565b915061218f82612ddc565b601c82019050919050565b60006121a7602683612991565b91506121b282612e05565b604082019050919050565b60006121ca601483612991565b91506121d582612e54565b602082019050919050565b60006121ed601483612991565b91506121f882612e7d565b602082019050919050565b6000612210602e83612991565b915061221b82612ea6565b604082019050919050565b6000612233602083612991565b915061223e82612ef5565b602082019050919050565b6000612256601283612991565b915061226182612f1e565b602082019050919050565b6000612279601383612991565b915061228482612f47565b602082019050919050565b600061229c600c83612991565b91506122a782612f70565b602082019050919050565b60006122bf602583612991565b91506122ca82612f99565b604082019050919050565b60006122e2600183612991565b91506122ed82612fe8565b602082019050919050565b6000612305602b83612991565b915061231082613011565b604082019050919050565b6000612328600b83612991565b915061233382613060565b602082019050919050565b600061234b600f83612991565b915061235682613089565b602082019050919050565b600061236e602083612991565b9150612379826130b2565b602082019050919050565b6101408201600082015161239b6000850182611fc5565b5060208201516123ae6020850182611fc5565b5060408201516123c16040850182612450565b5060608201516123d46060850182611fc5565b5060808201516123e760808501826120a0565b5060a08201516123fa60a0850182612450565b5060c082015161240d60c0850182612450565b5060e082015161242060e0850182612450565b50610100820151612435610100850182612450565b5061012082015161244a610120850182611ff2565b50505050565b61245981612b01565b82525050565b61246881612b01565b82525050565b61247f61247a82612b01565b612c58565b82525050565b61248e81612b0b565b82525050565b60006124a08284612060565b915081905092915050565b60006124b682612177565b91506124c28284612010565b60208201915081905092915050565b60006124dd828461246e565b60208201915081905092915050565b60006020820190506125016000830184611fd4565b92915050565b600060408201905061251c6000830185611fd4565b6125296020830184611fe3565b9392505050565b60006020820190506125456000830184611fe3565b92915050565b60006020820190506125606000830184612001565b92915050565b600060408201905061257b6000830185612001565b818103602083015261258d8184612027565b90509392505050565b60006080820190506125ab6000830187612001565b6125b86020830186612485565b6125c56040830185612001565b6125d26060830184612001565b95945050505050565b60006040820190506125f06000830185612091565b6125fd6020830184611fe3565b9392505050565b600060208201905061261960008301846120af565b92915050565b6000602082019050818103600083015261263981846120be565b905092915050565b6000606082019050818103600083015261265b81856120f7565b9050818103602083015261266e816122d5565b9050818103604083015261268281846120be565b90509392505050565b600060208201905081810360008301526126a48161219a565b9050919050565b600060208201905081810360008301526126c4816121bd565b9050919050565b600060208201905081810360008301526126e4816121e0565b9050919050565b6000602082019050818103600083015261270481612203565b9050919050565b6000602082019050818103600083015261272481612226565b9050919050565b6000602082019050818103600083015261274481612249565b9050919050565b600060208201905081810360008301526127648161226c565b9050919050565b600060208201905081810360008301526127848161228f565b9050919050565b600060208201905081810360008301526127a4816122b2565b9050919050565b600060208201905081810360008301526127c4816122f8565b9050919050565b600060208201905081810360008301526127e48161231b565b9050919050565b600060208201905081810360008301526128048161233e565b9050919050565b6000602082019050818103600083015261282481612361565b9050919050565b6000610140820190506128416000830184612384565b92915050565b60006101808201905061285d6000830186612384565b61286b610140830185612001565b61287961016083018461245f565b949350505050565b6000602082019050612896600083018461245f565b92915050565b60006128a66128b7565b90506128b28282612bd4565b919050565b6000604051905090565b600067ffffffffffffffff8211156128dc576128db612d7e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561290857612907612d7e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561293457612933612d7e565b5b61293d82612dcb565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006129b882612b01565b91506129c383612b01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129f8576129f7612c93565b5b828201905092915050565b6000612a0e82612b01565b9150612a1983612b01565b925082612a2957612a28612cc2565b5b828204905092915050565b6000612a3f82612b01565b9150612a4a83612b01565b925082821015612a5d57612a5c612c93565b5b828203905092915050565b6000612a7382612ae1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612ac782612a68565b9050919050565b6000819050612adc826130db565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000612b2382612b2a565b9050919050565b6000612b3582612ae1565b9050919050565b6000612b4782612ace565b9050919050565b6000612b5982612b0b565b9050919050565b82818337600083830152505050565b60005b83811015612b8d578082015181840152602081019050612b72565b83811115612b9c576000848401525b50505050565b60006002820490506001821680612bba57607f821691505b60208210811415612bce57612bcd612d20565b5b50919050565b612bdd82612dcb565b810181811067ffffffffffffffff82111715612bfc57612bfb612d7e565b5b80604052505050565b6000612c1082612b01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c4357612c42612c93565b5b600182019050919050565b6000819050919050565b6000819050919050565b6000612c6d82612b01565b9150612c7883612b01565b925082612c8857612c87612cc2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f43616c6c6572206973206e6f742070617965652e000000000000000000000000600082015250565b7f4e6f7420612076616c69642063757272656e6379000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f4f7574206f662072616e67650000000000000000000000000000000000000000600082015250565b7f4578706972792073686f756c6420626520677265617465207468616e2032342060008201527f686f757273000000000000000000000000000000000000000000000000000000602082015250565b7f2d00000000000000000000000000000000000000000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f4e6f742061207061796565000000000000000000000000000000000000000000600082015250565b7f416c726561647920637265617465640000000000000000000000000000000000600082015250565b7f496e766f69636520746f6f20736f6f6e2e2043616e6e6f742070726f63657373600082015250565b600681106130ec576130eb612cf1565b5b50565b6130f881612a68565b811461310357600080fd5b50565b61310f81612a7a565b811461311a57600080fd5b50565b61312681612a86565b811461313157600080fd5b50565b61313d81612a90565b811461314857600080fd5b50565b61315481612abc565b811461315f57600080fd5b50565b6006811061316f57600080fd5b50565b61317b81612b01565b811461318657600080fd5b5056fea2646970667358221220b5c35f52e1b052ce21f77097f123c084412c1a01bf43f263e84e24bd41ce9da164736f6c63430008060033";

export class Invoice__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Invoice> {
    return super.deploy(overrides || {}) as Promise<Invoice>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Invoice {
    return super.attach(address) as Invoice;
  }
  connect(signer: Signer): Invoice__factory {
    return super.connect(signer) as Invoice__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceInterface {
    return new utils.Interface(_abi) as InvoiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Invoice {
    return new Contract(address, _abi, signerOrProvider) as Invoice;
  }
}
