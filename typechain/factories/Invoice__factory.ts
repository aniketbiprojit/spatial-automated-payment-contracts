/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Invoice, InvoiceInterface } from "../Invoice";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Invoice.InvoiceData",
        name: "invoiceData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "InvoiceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetCurrency",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "SetFeePercent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetPayee",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIQUE_INDENTIFIER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct Invoice.InvoiceData",
        name: "invoiceData",
        type: "tuple",
      },
    ],
    name: "createInvoice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct Invoice.InvoiceData",
        name: "returnedInvoice",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    name: "currencies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "_currencies",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum Invoice.Frequency",
            name: "frequency",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "durationForRetiresBeforeFailure",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentNonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentParameter",
            type: "bytes32",
          },
        ],
        internalType: "struct Invoice.InvoiceData",
        name: "invoiceData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "whitelistPayee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061309f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637ce3489b1161009757806397dc75561161006657806397dc755614610274578063affed0e014610290578063c623cabe146102ae578063f2fde38b146102cc576100f5565b80637ce3489b146102125780637fd6f15c1461022e5780638129fc1c1461024c5780638da5cb5b14610256576100f5565b80633f2bbcb4116100d35780633f2bbcb4146101765780636036cba3146101a6578063715018a6146101d657806371c3a60b146101e0576100f5565b8063247db663146100fa57806324d7806c14610116578063310441fa14610146575b600080fd5b610114600480360381019061010f9190611deb565b6102e8565b005b610130600480360381019061012b9190611cf1565b610463565b60405161013d9190612435565b60405180910390f35b610160600480360381019061015b9190611cf1565b6104b9565b60405161016d9190612435565b60405180910390f35b610190600480360381019061018b9190611d1e565b6104d9565b60405161019d9190612435565b60405180910390f35b6101c060048036038101906101bb9190611e74565b610522565b6040516101cd9190612435565b60405180910390f35b6101de610542565b005b6101fa60048036038101906101f59190611ea1565b6105ca565b60405161020993929190612731565b60405180910390f35b61022c60048036038101906102279190611ecf565b6106c0565b005b6102366107e5565b604051610243919061276b565b60405180910390f35b6102546107eb565b005b61025e6108d3565b60405161026b91906123f1565b60405180910390f35b61028e60048036038101906102899190611d8f565b6108fd565b005b610298610a78565b6040516102a5919061276b565b60405180910390f35b6102b6610a7e565b6040516102c39190612509565b60405180910390f35b6102e660048036038101906102e19190611cf1565b610b0c565b005b6102f86102f3610c04565b610463565b8061033c5750610306610c04565b73ffffffffffffffffffffffffffffffffffffffff166103246108d3565b73ffffffffffffffffffffffffffffffffffffffff16145b61037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290612635565b60405180910390fd5b60005b825181101561045e5781609c600085848151811061039f5761039e612c2f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f98c0c4bde5f642566cdaebfb7cd2cdc72a98bc7f3440e38c19e1d58d92388d3483828151811061042c5761042b612c2f565b5b6020026020010151836040516104439291906124c5565b60405180910390a1808061045690612aef565b91505061037e565b505050565b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b609b6020528060005260406000206000915054906101000a900460ff1681565b600080836040516020016104ed9190612715565b6040516020818303038152906040528051906020012090506105188561051283610c0c565b85610c3c565b9150509392505050565b609c6020528060005260406000206000915054906101000a900460ff1681565b61054a610c04565b73ffffffffffffffffffffffffffffffffffffffff166105686108d3565b73ffffffffffffffffffffffffffffffffffffffff16146105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b5906125f5565b60405180910390fd5b6105c86000610e21565b565b6105d261186f565b600080609b60006105e1610c04565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90612595565b60405180910390fd5b61067184610ee7565b8093508194505050609d5490507ffd530febd28afa22a61e317d9ac622adc9a1d16eecb7b8df77d00f19cc4dc7068383836040516106b193929190612731565b60405180910390a19193909250565b6106d06106cb610c04565b610463565b8061071457506106de610c04565b73ffffffffffffffffffffffffffffffffffffffff166106fc6108d3565b73ffffffffffffffffffffffffffffffffffffffff16145b610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90612635565b60405180910390fd5b6064811080156107635750606481115b6107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079990612655565b60405180910390fd5b806099819055507f54b9dbb1167ce9a1e141b9c71f73394e64bf53da85077b4bcdcff626ba943f586099546040516107da919061276b565b60405180910390a150565b60995481565b60006107f7600161123f565b9050801561081b576001600060016101000a81548160ff0219169083151502179055505b61082361132f565b6040518060400160405280600881526020017f504249542d4150500000000000000000000000000000000000000000000000008152506098908051906020019061086e929190611919565b50600a60998190555080156108d05760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516108c791906124ee565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61090d610908610c04565b610463565b80610951575061091b610c04565b73ffffffffffffffffffffffffffffffffffffffff166109396108d3565b73ffffffffffffffffffffffffffffffffffffffff16145b610990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098790612635565b60405180910390fd5b60005b8251811015610a735781609b60008584815181106109b4576109b3612c2f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd23249e66bcd36732dfc58e0713ce7e15bd57a8fe27ce72dffa3035ccfa7ce5d838281518110610a4157610a40612c2f565b5b602002602001015183604051610a5892919061240c565b60405180910390a18080610a6b90612aef565b915050610993565b505050565b609d5481565b60988054610a8b90612a8c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab790612a8c565b8015610b045780601f10610ad957610100808354040283529160200191610b04565b820191906000526020600020905b815481529060010190602001808311610ae757829003601f168201915b505050505081565b610b14610c04565b73ffffffffffffffffffffffffffffffffffffffff16610b326108d3565b73ffffffffffffffffffffffffffffffffffffffff1614610b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7f906125f5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bef90612575565b60405180910390fd5b610c0181610e21565b50565b600033905090565b600081604051602001610c1f91906123cb565b604051602081830303815290604052805190602001209050919050565b6000806000610c4b8585611390565b9150915060006004811115610c6357610c62612bd1565b5b816004811115610c7657610c75612bd1565b5b148015610cae57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610cbe57600192505050610e1a565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8888604051602401610cf3929190612450565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610d5d91906123b4565b600060405180830381855afa9150503d8060008114610d98576040519150601f19603f3d011682016040523d82523d6000602084013e610d9d565b606091505b5091509150818015610db0575060208151145b8015610e135750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610df29190611e47565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9450505050505b9392505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610eef61186f565b600080836040015111610f37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2e90612615565b60405180910390fd5b609b6000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe906126b5565b60405180910390fd5b609c6000846060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e906125b5565b60405180910390fd5b610e10426110659190612897565b8360a00151116110aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a1906126f5565b60405180910390fd5b8260a001518360e001511180156110d65750620151808360a001518460e001516110d4919061291e565b115b611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90612675565b60405180910390fd5b6001609d60008282546111289190612897565b92505081905550609861113c609d54611413565b60405160200161114d92919061252b565b6040516020818303038152906040528051906020012083610120018181525050609d54836101000181815250508260405160200161118b9190612715565b60405160208183030381529060405280519060200120905060011515609a600083815260200190815260200160002060009054906101000a900460ff161515141561120b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611202906126d5565b60405180910390fd5b6001609a600083815260200190815260200160002060006101000a81548160ff021916908315150217905550829150915091565b60008060019054906101000a900460ff16156112b65760018260ff1614801561126e575061126c30611574565b155b6112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a4906125d5565b60405180910390fd5b6000905061132a565b8160ff1660008054906101000a900460ff1660ff161061130b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611302906125d5565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff1661137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137590612695565b60405180910390fd5b611386611597565b61138e6115f0565b565b6000806041835114156113d25760008060006020860151925060408601519150606086015160001a90506113c687828585611649565b9450945050505061140c565b6040835114156114035760008060208501519150604085015190506113f8868383611756565b93509350505061140c565b60006002915091505b9250929050565b6060600082141561145b576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061156f565b600082905060005b6000821461148d57808061147690612aef565b915050600a8261148691906128ed565b9150611463565b60008167ffffffffffffffff8111156114a9576114a8612c5e565b5b6040519080825280601f01601f1916602001820160405280156114db5781602001600182028036833780820191505090505b5090505b60008514611568576001826114f4919061291e565b9150600a856115039190612b42565b603061150f9190612897565b60f81b81838151811061152557611524612c2f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561156191906128ed565b94506114df565b8093505050505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166115e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dd90612695565b60405180910390fd5b6115ee6117b5565b565b600060019054906101000a900460ff1661163f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163690612695565b60405180910390fd5b611647611816565b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561168457600060039150915061174d565b601b8560ff161415801561169c5750601c8560ff1614155b156116ae57600060049150915061174d565b6000600187878787604051600081526020016040526040516116d39493929190612480565b6020604051602081039080840390855afa1580156116f5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117445760006001925092505061174d565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c6117999190612897565b90506117a787828885611649565b935093505050935093915050565b600060019054906101000a900460ff16611804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fb90612695565b60405180910390fd5b61181461180f610c04565b610e21565b565b600060019054906101000a900460ff16611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185c90612695565b60405180910390fd5b6001606581905550565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060058111156118ed576118ec612bd1565b5b815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b82805461192590612a8c565b90600052602060002090601f016020900481019282611947576000855561198e565b82601f1061196057805160ff191683800117855561198e565b8280016001018555821561198e579182015b8281111561198d578251825591602001919060010190611972565b5b50905061199b919061199f565b5090565b5b808211156119b85760008160009055506001016119a0565b5090565b60006119cf6119ca846127ab565b612786565b905080838252602082019050828560208602820111156119f2576119f1612c97565b5b60005b85811015611a225781611a088882611ade565b8452602084019350602083019250506001810190506119f5565b5050509392505050565b6000611a3f611a3a846127d7565b612786565b90508083825260208201905082856020860282011115611a6257611a61612c97565b5b60005b85811015611a925781611a788882611bbc565b845260208401935060208301925050600181019050611a65565b5050509392505050565b6000611aaf611aaa84612803565b612786565b905082815260208101848484011115611acb57611aca612c9c565b5b611ad6848285612a4a565b509392505050565b600081359050611aed81612fcf565b92915050565b600082601f830112611b0857611b07612c8d565b5b8135611b188482602086016119bc565b91505092915050565b600082601f830112611b3657611b35612c8d565b5b8135611b46848260208601611a2c565b91505092915050565b600081359050611b5e81612fe6565b92915050565b600081359050611b7381612ffd565b92915050565b600081519050611b8881613014565b92915050565b600082601f830112611ba357611ba2612c8d565b5b8135611bb3848260208601611a9c565b91505092915050565b600081359050611bcb8161302b565b92915050565b600081359050611be081613042565b92915050565b60006101408284031215611bfd57611bfc612c92565b5b611c08610140612786565b90506000611c1884828501611ade565b6000830152506020611c2c84828501611ade565b6020830152506040611c4084828501611cdc565b6040830152506060611c5484828501611ade565b6060830152506080611c6884828501611bd1565b60808301525060a0611c7c84828501611cdc565b60a08301525060c0611c9084828501611cdc565b60c08301525060e0611ca484828501611cdc565b60e083015250610100611cb984828501611cdc565b61010083015250610120611ccf84828501611b64565b6101208301525092915050565b600081359050611ceb81613052565b92915050565b600060208284031215611d0757611d06612ca6565b5b6000611d1584828501611ade565b91505092915050565b60008060006101808486031215611d3857611d37612ca6565b5b6000611d4686828701611ade565b9350506020611d5786828701611be6565b92505061016084013567ffffffffffffffff811115611d7957611d78612ca1565b5b611d8586828701611b8e565b9150509250925092565b60008060408385031215611da657611da5612ca6565b5b600083013567ffffffffffffffff811115611dc457611dc3612ca1565b5b611dd085828601611af3565b9250506020611de185828601611b4f565b9150509250929050565b60008060408385031215611e0257611e01612ca6565b5b600083013567ffffffffffffffff811115611e2057611e1f612ca1565b5b611e2c85828601611b21565b9250506020611e3d85828601611b4f565b9150509250929050565b600060208284031215611e5d57611e5c612ca6565b5b6000611e6b84828501611b79565b91505092915050565b600060208284031215611e8a57611e89612ca6565b5b6000611e9884828501611bbc565b91505092915050565b60006101408284031215611eb857611eb7612ca6565b5b6000611ec684828501611be6565b91505092915050565b600060208284031215611ee557611ee4612ca6565b5b6000611ef384828501611cdc565b91505092915050565b611f0581612952565b82525050565b611f1481612952565b82525050565b611f2381612964565b82525050565b611f3281612970565b82525050565b611f4181612970565b82525050565b611f58611f5382612970565b612b38565b82525050565b6000611f6982612849565b611f73818561285f565b9350611f83818560208601612a59565b611f8c81612cab565b840191505092915050565b6000611fa282612849565b611fac8185612870565b9350611fbc818560208601612a59565b80840191505092915050565b611fd181612a02565b82525050565b611fe081612a26565b82525050565b611fef81612a38565b82525050565b600061200082612854565b61200a818561287b565b935061201a818560208601612a59565b61202381612cab565b840191505092915050565b6000815461203b81612a8c565b612045818661287b565b945060018216600081146120605760018114612072576120a5565b60ff19831686526020860193506120a5565b61207b85612834565b60005b8381101561209d5781548189015260018201915060208101905061207e565b808801955050505b50505092915050565b60006120bb601c8361288c565b91506120c682612cbc565b601c82019050919050565b60006120de60268361287b565b91506120e982612ce5565b604082019050919050565b600061210160148361287b565b915061210c82612d34565b602082019050919050565b600061212460148361287b565b915061212f82612d5d565b602082019050919050565b6000612147602e8361287b565b915061215282612d86565b604082019050919050565b600061216a60208361287b565b915061217582612dd5565b602082019050919050565b600061218d60128361287b565b915061219882612dfe565b602082019050919050565b60006121b060138361287b565b91506121bb82612e27565b602082019050919050565b60006121d3600c8361287b565b91506121de82612e50565b602082019050919050565b60006121f660258361287b565b915061220182612e79565b604082019050919050565b600061221960018361287b565b915061222482612ec8565b602082019050919050565b600061223c602b8361287b565b915061224782612ef1565b604082019050919050565b600061225f600b8361287b565b915061226a82612f40565b602082019050919050565b6000612282600f8361287b565b915061228d82612f69565b602082019050919050565b60006122a560208361287b565b91506122b082612f92565b602082019050919050565b610140820160008201516122d26000850182611efc565b5060208201516122e56020850182611efc565b5060408201516122f86040850182612387565b50606082015161230b6060850182611efc565b50608082015161231e6080850182611fd7565b5060a082015161233160a0850182612387565b5060c082015161234460c0850182612387565b5060e082015161235760e0850182612387565b5061010082015161236c610100850182612387565b50610120820151612381610120850182611f29565b50505050565b612390816129eb565b82525050565b61239f816129eb565b82525050565b6123ae816129f5565b82525050565b60006123c08284611f97565b915081905092915050565b60006123d6826120ae565b91506123e28284611f47565b60208201915081905092915050565b60006020820190506124066000830184611f0b565b92915050565b60006040820190506124216000830185611f0b565b61242e6020830184611f1a565b9392505050565b600060208201905061244a6000830184611f1a565b92915050565b60006040820190506124656000830185611f38565b81810360208301526124778184611f5e565b90509392505050565b60006080820190506124956000830187611f38565b6124a260208301866123a5565b6124af6040830185611f38565b6124bc6060830184611f38565b95945050505050565b60006040820190506124da6000830185611fc8565b6124e76020830184611f1a565b9392505050565b60006020820190506125036000830184611fe6565b92915050565b600060208201905081810360008301526125238184611ff5565b905092915050565b60006060820190508181036000830152612545818561202e565b905081810360208301526125588161220c565b9050818103604083015261256c8184611ff5565b90509392505050565b6000602082019050818103600083015261258e816120d1565b9050919050565b600060208201905081810360008301526125ae816120f4565b9050919050565b600060208201905081810360008301526125ce81612117565b9050919050565b600060208201905081810360008301526125ee8161213a565b9050919050565b6000602082019050818103600083015261260e8161215d565b9050919050565b6000602082019050818103600083015261262e81612180565b9050919050565b6000602082019050818103600083015261264e816121a3565b9050919050565b6000602082019050818103600083015261266e816121c6565b9050919050565b6000602082019050818103600083015261268e816121e9565b9050919050565b600060208201905081810360008301526126ae8161222f565b9050919050565b600060208201905081810360008301526126ce81612252565b9050919050565b600060208201905081810360008301526126ee81612275565b9050919050565b6000602082019050818103600083015261270e81612298565b9050919050565b60006101408201905061272b60008301846122bb565b92915050565b60006101808201905061274760008301866122bb565b612755610140830185611f38565b612763610160830184612396565b949350505050565b60006020820190506127806000830184612396565b92915050565b60006127906127a1565b905061279c8282612abe565b919050565b6000604051905090565b600067ffffffffffffffff8211156127c6576127c5612c5e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156127f2576127f1612c5e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561281e5761281d612c5e565b5b61282782612cab565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006128a2826129eb565b91506128ad836129eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156128e2576128e1612b73565b5b828201905092915050565b60006128f8826129eb565b9150612903836129eb565b92508261291357612912612ba2565b5b828204905092915050565b6000612929826129eb565b9150612934836129eb565b92508282101561294757612946612b73565b5b828203905092915050565b600061295d826129cb565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006129b182612952565b9050919050565b60008190506129c682612fbb565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000612a0d82612a14565b9050919050565b6000612a1f826129cb565b9050919050565b6000612a31826129b8565b9050919050565b6000612a43826129f5565b9050919050565b82818337600083830152505050565b60005b83811015612a77578082015181840152602081019050612a5c565b83811115612a86576000848401525b50505050565b60006002820490506001821680612aa457607f821691505b60208210811415612ab857612ab7612c00565b5b50919050565b612ac782612cab565b810181811067ffffffffffffffff82111715612ae657612ae5612c5e565b5b80604052505050565b6000612afa826129eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b2d57612b2c612b73565b5b600182019050919050565b6000819050919050565b6000612b4d826129eb565b9150612b58836129eb565b925082612b6857612b67612ba2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f43616c6c6572206973206e6f742070617965652e000000000000000000000000600082015250565b7f4e6f7420612076616c69642063757272656e6379000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416d6f756e742063616e6e6f7420626520300000000000000000000000000000600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f4f7574206f662072616e67650000000000000000000000000000000000000000600082015250565b7f4578706972792073686f756c6420626520677265617465207468616e2032342060008201527f686f757273000000000000000000000000000000000000000000000000000000602082015250565b7f2d00000000000000000000000000000000000000000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f4e6f742061207061796565000000000000000000000000000000000000000000600082015250565b7f416c726561647920637265617465640000000000000000000000000000000000600082015250565b7f496e766f69636520746f6f20736f6f6e2e2043616e6e6f742070726f63657373600082015250565b60068110612fcc57612fcb612bd1565b5b50565b612fd881612952565b8114612fe357600080fd5b50565b612fef81612964565b8114612ffa57600080fd5b50565b61300681612970565b811461301157600080fd5b50565b61301d8161297a565b811461302857600080fd5b50565b613034816129a6565b811461303f57600080fd5b50565b6006811061304f57600080fd5b50565b61305b816129eb565b811461306657600080fd5b5056fea264697066735822122002ea8226fe1628ba89f15d326f39a4f42fb686b9bf6d97d74be74aeb95fb7e7e64736f6c63430008060033";

export class Invoice__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Invoice> {
    return super.deploy(overrides || {}) as Promise<Invoice>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Invoice {
    return super.attach(address) as Invoice;
  }
  connect(signer: Signer): Invoice__factory {
    return super.connect(signer) as Invoice__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceInterface {
    return new utils.Interface(_abi) as InvoiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Invoice {
    return new Contract(address, _abi, signerOrProvider) as Invoice;
  }
}
